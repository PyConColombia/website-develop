{"version":3,"file":"component---src-pages-call-for-proposals-components-question-js-b8337a2a02207870b0e7.js","mappings":"2OAGO,SAASA,EAAwBC,EAAgBC,GACtD,OAAOC,MAAMC,QAAQH,GAAkBA,EAAeI,SAASH,GAAYD,IAAmBC,CAChG,CACA,MAAMI,EAAuB,gBAAoB,CAAC,GAClDA,EAAQC,YAAc,mBACtB,Q,UCIA,MAAMC,EAAiC,cAAiB,EACtDC,GAAIC,EAAY,MAChBC,WACAC,YACAC,WACAX,cACGY,GACFC,KACD,MAAM,eACJd,IACE,IAAAe,YAAWC,GAEf,OADAN,GAAW,QAAmBA,EAAU,uBACpB,SAAKO,EAAA,EAAU,CACjCH,IAAKA,EACLI,GAAInB,EAAwBC,EAAgBC,MACzCY,EACHF,UAAW,IAAWA,EAAWD,GACjCE,UAAuB,SAAKH,EAAW,CACrCG,SAAU,WAAeO,KAAKP,MAEhC,IAEJL,EAAkBD,YAAc,oBAChC,QChCA,MAAM,EAAuB,gBAAoB,CAC/CL,SAAU,KAEZ,EAAQK,YAAc,uBACtB,QCEA,MAAMc,EAA6B,cAAiB,EAElDZ,GAAIC,EAAY,MAChBC,WACAC,YACAU,UACAC,aACAC,YACAC,SACAC,YACAC,cACGb,GACFC,KACDJ,GAAW,QAAmBA,EAAU,kBACxC,MAAM,SACJT,IACE,IAAAc,YAAWY,GACf,OAAoB,SAAK,EAAmB,CAC1C1B,SAAUA,EACVoB,QAASA,EACTC,WAAYA,EACZC,UAAWA,EACXC,OAAQA,EACRC,UAAWA,EACXC,SAAUA,EACVd,UAAuB,SAAKH,EAAW,CACrCK,IAAKA,KACFD,EACHF,UAAW,IAAWA,EAAWD,MAEnC,IAEJU,EAAcd,YAAc,gBAC5B,QCLA,MAAMsB,EAA+B,cAAiB,EAEpDpB,GAAIC,EAAY,SAChBC,WACAC,YACAkB,aACGhB,GACFC,KACDJ,GAAW,QAAmBA,EAAU,oBACxC,MAAM,SACJT,IACE,IAAAc,YAAWY,GACTG,EAxCD,SAA4B7B,EAAU4B,GAC3C,MAAM,eACJ7B,EAAc,SACd+B,EAAQ,WACRC,IACE,IAAAjB,YAAWC,GACf,OAAOiB,IAKL,IAAIC,EAAiBjC,IAAaD,EAAiB,KAAOC,EACtD+B,IAGEE,EAFAhC,MAAMC,QAAQH,GACZA,EAAeI,SAASH,GACTD,EAAemC,QAAOC,GAAKA,IAAMnC,IAEjC,IAAID,EAAgBC,GAItB,CAACA,IAGV,MAAZ8B,GAA4BA,EAASG,EAAgBD,GAC1C,MAAXJ,GAA2BA,EAAQI,EAAE,CAEzC,CAa2BI,CAAmBpC,EAAU4B,IAChD,eACJ7B,IACE,IAAAe,YAAWC,GAIf,MAHkB,WAAdP,IACFI,EAAMyB,KAAO,WAEK,SAAK7B,EAAW,CAClCK,IAAKA,EACLe,QAASC,KACNjB,EACH,gBAAiBX,MAAMC,QAAQH,GAAkBA,EAAeI,SAASH,GAAYA,IAAaD,EAClGW,UAAW,IAAWA,EAAWD,GAAWX,EAAwBC,EAAgBC,IAAa,cACjG,IAEJ2B,EAAgBtB,YAAc,kBAC9B,QC1DA,MAAMiC,EAA+B,cAAiB,EAEpD/B,GAAIC,EAAY,KAChBC,WACAC,YACAC,WACAiB,aACGhB,GACFC,KACDJ,GAAW,QAAmBA,EAAU,qBACpB,SAAKD,EAAW,CAClCK,IAAKA,KACFD,EACHF,UAAW,IAAWA,EAAWD,GACjCE,UAAuB,SAAK,EAAiB,CAC3CiB,QAASA,EACTjB,SAAUA,SAIhB2B,EAAgBjC,YAAc,kBAC9B,QCpBA,MAAMkC,EAA6B,cAAiB,EAElDhC,GAAIC,EAAY,MAChBC,WACAC,YACAV,cACGY,GACFC,KACDJ,GAAW,QAAmBA,EAAU,kBACxC,MAAM+B,GAAe,IAAAC,UAAQ,KAAM,CACjCzC,cACE,CAACA,IACL,OAAoB,SAAK0B,EAAqBgB,SAAU,CACtDC,MAAOH,EACP7B,UAAuB,SAAKH,EAAW,CACrCK,IAAKA,KACFD,EACHF,UAAW,IAAWA,EAAWD,MAEnC,IAEJ8B,EAAclC,YAAc,gBAC5B,QChBA,MAAMuC,EAAyB,cAAiB,CAAChC,EAAOC,KACtD,MAEEN,GAAIC,EAAY,MAAK,UACrBqC,EAAS,SACTpC,EAAQ,UACRC,EAAS,SACToB,EAAQ,MACRgB,EAAK,WACLf,KACGgB,IACD,QAAgBnC,EAAO,CACzBiC,UAAW,aAEPG,GAAS,QAAmBvC,EAAU,aACtC+B,GAAe,IAAAC,UAAQ,KAAM,CACjC1C,eAAgB8C,EAChBf,WACAC,gBACE,CAACc,EAAWf,EAAUC,IAC1B,OAAoB,SAAKhB,EAAiB2B,SAAU,CAClDC,MAAOH,EACP7B,UAAuB,SAAKH,EAAW,CACrCK,IAAKA,KACFkC,EACHrC,UAAW,IAAWA,EAAWsC,EAAQF,GAAS,GAAGE,cAEvD,IAEJJ,EAAUvC,YAAc,YACxB,MAAe4C,OAAOC,OAAON,EAAW,CACtCO,OAAQ,EACRnC,SAAU,EACVoC,KAAM,EACNC,OAAQ,EACRC,KAAM,I,UC2FR,MAxIiBC,IAEbC,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,OAAK9C,UAAU,4BACb8C,EAAAA,cAAA,UAAI,uBAENA,EAAAA,cAACZ,EAAS,CAACb,YAAU,GACnByB,EAAAA,cAACZ,EAAUQ,KAAI,CAACpD,SAAS,IAAIU,UAAU,aACrC8C,EAAAA,cAACZ,EAAUS,OAAM,CAAC3C,UAAU,mBAC1B8C,EAAAA,cAAA,QAAM9C,UAAU,kBAAiB,UACjC8C,EAAAA,cAACC,EAAAA,EAAW,CACVC,IAAI,mDACJC,IAAI,WACJC,MAAM,gBAAeC,YAAAC,EAAA,SAGzBN,EAAAA,cAACZ,EAAUU,KAAI,CAAC5C,UAAU,iBACxB8C,EAAAA,cAAA,SAAG,iLAKHA,EAAAA,cAAA,WACAA,EAAAA,cAAA,SAAG,wEACHA,EAAAA,cAAA,WACAA,EAAAA,cAAA,UACEA,EAAAA,cAAA,UAAI,gBACJA,EAAAA,cAAA,UAAI,oBACJA,EAAAA,cAAA,UAAI,iBACJA,EAAAA,cAAA,UAAI,2BACJA,EAAAA,cAAA,UAAI,4BACJA,EAAAA,cAAA,UAAI,mBACJA,EAAAA,cAAA,UAAI,4BACJA,EAAAA,cAAA,UAAI,gBACJA,EAAAA,cAAA,UAAI,sBAENA,EAAAA,cAAA,WACAA,EAAAA,cAAA,SAAG,sIAIHA,EAAAA,cAAA,WACAA,EAAAA,cAAA,UACEA,EAAAA,cAAA,UAAI,yBACJA,EAAAA,cAAA,UAAI,aACJA,EAAAA,cAAA,UAAI,8BACJA,EAAAA,cAAA,UAAI,2BACJA,EAAAA,cAAA,UAAI,gCAENA,EAAAA,cAAA,WACAA,EAAAA,cAAA,SAAG,wPAOPA,EAAAA,cAACZ,EAAUQ,KAAI,CAACpD,SAAS,IAAIU,UAAU,aACrC8C,EAAAA,cAACZ,EAAUS,OAAM,CAAC3C,UAAU,mBAC1B8C,EAAAA,cAAA,QAAM9C,UAAU,kBAAiB,gDACjC8C,EAAAA,cAACC,EAAAA,EAAW,CACVC,IAAI,mDACJC,IAAI,WACJC,MAAM,gBAAeC,YAAAC,EAAA,SAGzBN,EAAAA,cAACZ,EAAUU,KAAI,CAAC5C,UAAU,iBACxB8C,EAAAA,cAAA,SAAG,8QAMHA,EAAAA,cAAA,WACAA,EAAAA,cAAA,UACEA,EAAAA,cAAA,UAAI,2EACJA,EAAAA,cAAA,UAAI,sIAIJA,EAAAA,cAAA,UAAI,4HAIJA,EAAAA,cAAA,UAAI,0EAENA,EAAAA,cAAA,UAAI,yBACJA,EAAAA,cAAA,WACAA,EAAAA,cAAA,SAAG,+GAIHA,EAAAA,cAAA,WACAA,EAAAA,cAAA,UACEA,EAAAA,cAAA,UAAI,2FAIJA,EAAAA,cAAA,UAAI,+DACJA,EAAAA,cAAA,UAAI,qIAIJA,EAAAA,cAAA,UAAI,6CAENA,EAAAA,cAAA,WACAA,EAAAA,cAAA,SAAG,oMAOPA,EAAAA,cAACZ,EAAUQ,KAAI,CAACpD,SAAS,IAAIU,UAAU,aACrC8C,EAAAA,cAACZ,EAAUS,OAAM,CAAC3C,UAAU,mBAC1B8C,EAAAA,cAAA,QAAM9C,UAAU,kBAAiB,mBACjC8C,EAAAA,cAACC,EAAAA,EAAW,CACVC,IAAI,mDACJC,IAAI,WACJC,MAAM,gBAAeC,YAAAC,EAAA,SAGzBN,EAAAA,cAACZ,EAAUU,KAAI,CAAC5C,UAAU,iBACxB8C,EAAAA,cAAA,SAAG,0S","sources":["webpack://pycon-colombia-2024/./node_modules/react-bootstrap/esm/AccordionContext.js","webpack://pycon-colombia-2024/./node_modules/react-bootstrap/esm/AccordionCollapse.js","webpack://pycon-colombia-2024/./node_modules/react-bootstrap/esm/AccordionItemContext.js","webpack://pycon-colombia-2024/./node_modules/react-bootstrap/esm/AccordionBody.js","webpack://pycon-colombia-2024/./node_modules/react-bootstrap/esm/AccordionButton.js","webpack://pycon-colombia-2024/./node_modules/react-bootstrap/esm/AccordionHeader.js","webpack://pycon-colombia-2024/./node_modules/react-bootstrap/esm/AccordionItem.js","webpack://pycon-colombia-2024/./node_modules/react-bootstrap/esm/Accordion.js","webpack://pycon-colombia-2024/./src/pages/call-for-proposals/components/Question.js"],"sourcesContent":["\"use client\";\n\nimport * as React from 'react';\nexport function isAccordionItemSelected(activeEventKey, eventKey) {\n  return Array.isArray(activeEventKey) ? activeEventKey.includes(eventKey) : activeEventKey === eventKey;\n}\nconst context = /*#__PURE__*/React.createContext({});\ncontext.displayName = 'AccordionContext';\nexport default context;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Collapse from './Collapse';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * This component accepts all of [`Collapse`'s props](/docs/utilities/transitions#collapse-1).\n */\nconst AccordionCollapse = /*#__PURE__*/React.forwardRef(({\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  children,\n  eventKey,\n  ...props\n}, ref) => {\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-collapse');\n  return /*#__PURE__*/_jsx(Collapse, {\n    ref: ref,\n    in: isAccordionItemSelected(activeEventKey, eventKey),\n    ...props,\n    className: classNames(className, bsPrefix),\n    children: /*#__PURE__*/_jsx(Component, {\n      children: React.Children.only(children)\n    })\n  });\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","\"use client\";\n\nimport * as React from 'react';\nconst context = /*#__PURE__*/React.createContext({\n  eventKey: ''\n});\ncontext.displayName = 'AccordionItemContext';\nexport default context;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionItemContext from './AccordionItemContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionBody = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  onExited,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-body');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  return /*#__PURE__*/_jsx(AccordionCollapse, {\n    eventKey: eventKey,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix)\n    })\n  });\n});\nAccordionBody.displayName = 'AccordionBody';\nexport default AccordionBody;","\"use client\";\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport classNames from 'classnames';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport AccordionItemContext from './AccordionItemContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useAccordionButton(eventKey, onClick) {\n  const {\n    activeEventKey,\n    onSelect,\n    alwaysOpen\n  } = useContext(AccordionContext);\n  return e => {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    let eventKeyPassed = eventKey === activeEventKey ? null : eventKey;\n    if (alwaysOpen) {\n      if (Array.isArray(activeEventKey)) {\n        if (activeEventKey.includes(eventKey)) {\n          eventKeyPassed = activeEventKey.filter(k => k !== eventKey);\n        } else {\n          eventKeyPassed = [...activeEventKey, eventKey];\n        }\n      } else {\n        // activeEventKey is undefined.\n        eventKeyPassed = [eventKey];\n      }\n    }\n    onSelect == null ? void 0 : onSelect(eventKeyPassed, e);\n    onClick == null ? void 0 : onClick(e);\n  };\n}\nconst AccordionButton = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'button',\n  bsPrefix,\n  className,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-button');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  const accordionOnClick = useAccordionButton(eventKey, onClick);\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    onClick: accordionOnClick,\n    ...props,\n    \"aria-expanded\": Array.isArray(activeEventKey) ? activeEventKey.includes(eventKey) : eventKey === activeEventKey,\n    className: classNames(className, bsPrefix, !isAccordionItemSelected(activeEventKey, eventKey) && 'collapsed')\n  });\n});\nAccordionButton.displayName = 'AccordionButton';\nexport default AccordionButton;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionButton from './AccordionButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionHeader = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'h2',\n  bsPrefix,\n  className,\n  children,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-header');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    children: /*#__PURE__*/_jsx(AccordionButton, {\n      onClick: onClick,\n      children: children\n    })\n  });\n});\nAccordionHeader.displayName = 'AccordionHeader';\nexport default AccordionHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionItemContext from './AccordionItemContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionItem = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  eventKey,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-item');\n  const contextValue = useMemo(() => ({\n    eventKey\n  }), [eventKey]);\n  return /*#__PURE__*/_jsx(AccordionItemContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix)\n    })\n  });\n});\nAccordionItem.displayName = 'AccordionItem';\nexport default AccordionItem;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionBody from './AccordionBody';\nimport AccordionButton from './AccordionButton';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nimport AccordionHeader from './AccordionHeader';\nimport AccordionItem from './AccordionItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Accordion = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    activeKey,\n    bsPrefix,\n    className,\n    onSelect,\n    flush,\n    alwaysOpen,\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'accordion');\n  const contextValue = useMemo(() => ({\n    activeEventKey: activeKey,\n    onSelect,\n    alwaysOpen\n  }), [activeKey, onSelect, alwaysOpen]);\n  return /*#__PURE__*/_jsx(AccordionContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...controlledProps,\n      className: classNames(className, prefix, flush && `${prefix}-flush`)\n    })\n  });\n});\nAccordion.displayName = 'Accordion';\nexport default Object.assign(Accordion, {\n  Button: AccordionButton,\n  Collapse: AccordionCollapse,\n  Item: AccordionItem,\n  Header: AccordionHeader,\n  Body: AccordionBody\n});","import React from 'react';\nimport Accordion from 'react-bootstrap/Accordion';\nimport { StaticImage } from 'gatsby-plugin-image';\n\nconst Question = () => {\n  return (\n    <>\n      <div className=\"title-question-container\">\n        <h1>Frequent questions</h1>\n      </div>\n      <Accordion alwaysOpen>\n        <Accordion.Item eventKey=\"0\" className=\"questions\">\n          <Accordion.Header className=\"question-header\">\n            <span className=\"question-title\">Topics</span>\n            <StaticImage\n              src=\"../../../static/images/icons/question-button.svg\"\n              alt=\"question\"\n              class=\"question-icon\"\n            />\n          </Accordion.Header>\n          <Accordion.Body className=\"question-body\">\n            <p>\n              If you want to know what are we interested in hearing about, you can take a look at\n              the talks & workshops line-up for past years (2017, 2018 , 2019 , 2020 ,2021 , and\n              2022).\n            </p>\n            <br />\n            <p>We like to see any kind of proposal related to the following topics:</p>\n            <br />\n            <ul>\n              <li>Data Science</li>\n              <li>Machine Learning</li>\n              <li>Deep Learning</li>\n              <li>Artificial Intelligence</li>\n              <li>Internet of Things (IoT)</li>\n              <li>Web Development</li>\n              <li>Internet of Things (IoT)</li>\n              <li>Micro-Python</li>\n              <li>Python Frameworks</li>\n            </ul>\n            <br />\n            <p>\n              Of course, not everything should be technical topics, here are our alternative topics\n              which we consider related to our conference:\n            </p>\n            <br />\n            <ul>\n              <li>Inclusion & Diversity</li>\n              <li>Community</li>\n              <li>Industry & Academy Bonding</li>\n              <li>Education & Soft Skills</li>\n              <li>People in STEM Life Quality</li>\n            </ul>\n            <br />\n            <p>\n              If your talk topic doesn't fill any of our listings but you are really passionate\n              about your talk, don't worry! we love people like you, this is your conference! submit\n              your proposal and maybe we will discover new topics to improve our lists.\n            </p>\n          </Accordion.Body>\n        </Accordion.Item>\n        <Accordion.Item eventKey=\"1\" className=\"questions\">\n          <Accordion.Header className=\"question-header\">\n            <span className=\"question-title\">Why should you speak at PyCon Colombia 2024?</span>\n            <StaticImage\n              src=\"../../../static/images/icons/question-button.svg\"\n              alt=\"question\"\n              class=\"question-icon\"\n            />\n          </Accordion.Header>\n          <Accordion.Body className=\"question-body\">\n            <p>\n              We strongly believe that if you have something you are really passionate about and you\n              want to spread the word, you should craft a talk and do it! but, if that's not enough\n              to convince you, here is the list of perks you get by becoming a PyCon Colombia 2024\n              speaker:\n            </p>\n            <br />\n            <ul>\n              <li>Free full conference pass: Gives you access to all talks and workshops.</li>\n              <li>\n                Access to Speaker dinner: Dinner that includes keynotes speakers, sponsors, speakers\n                and organizers, fully paid by the conference.\n              </li>\n              <li>\n                A professionally produced video of your talk published in our YouTube channel (see\n                Talk Videos section for more details)\n              </li>\n              <li>The opportunity to positively impact the lives of over 600 attendees.</li>\n            </ul>\n            <h1>Our Selection Process</h1>\n            <br />\n            <p>\n              In order to create the most valuable talks and workshops line-up for the conference we\n              follow this process:\n            </p>\n            <br />\n            <ol>\n              <li>\n                All proposals reviews are anonymized, that way we avoid the bias towards the\n                submitter.\n              </li>\n              <li>All proposals are reviewed and voted by our Reviewers Team.</li>\n              <li>\n                The best-rated proposals are de-anonymized to review the speaker's profile, this is\n                made by the PyCon Colombia's Talks Committee.\n              </li>\n              <li>The Committee decides the final line-up.</li>\n            </ol>\n            <br />\n            <p>\n              We are really excited to get a lot more excellent submissions than we have speaking\n              slots. This process helps us to get the best proposals by trying to avoid the bias to\n              the speaker profile.\n            </p>\n          </Accordion.Body>\n        </Accordion.Item>\n        <Accordion.Item eventKey=\"2\" className=\"questions\">\n          <Accordion.Header className=\"question-header\">\n            <span className=\"question-title\">Code of Conduct</span>\n            <StaticImage\n              src=\"../../../static/images/icons/question-button.svg\"\n              alt=\"question\"\n              class=\"question-icon\"\n            />\n          </Accordion.Header>\n          <Accordion.Body className=\"question-body\">\n            <p>\n              In order to create an environment that is safe and comfortable for all our attendees\n              and staff members and to make sure everybody enjoys the conference. We have written\n              this code of conduct . We hope you read, understand and comply with it during the\n              conference and in your proposal and talk\n            </p>\n          </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n    </>\n  );\n};\n\nexport default Question;\n"],"names":["isAccordionItemSelected","activeEventKey","eventKey","Array","isArray","includes","context","displayName","AccordionCollapse","as","Component","bsPrefix","className","children","props","ref","useContext","AccordionContext","Collapse","in","only","AccordionBody","onEnter","onEntering","onEntered","onExit","onExiting","onExited","AccordionItemContext","AccordionButton","onClick","accordionOnClick","onSelect","alwaysOpen","e","eventKeyPassed","filter","k","useAccordionButton","type","AccordionHeader","AccordionItem","contextValue","useMemo","Provider","value","Accordion","activeKey","flush","controlledProps","prefix","Object","assign","Button","Item","Header","Body","Question","React","StaticImage","src","alt","class","__imageData","require"],"sourceRoot":""}